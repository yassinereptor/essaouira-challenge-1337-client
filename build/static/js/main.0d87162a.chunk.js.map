{"version":3,"sources":["logo.svg","images/avatars/0.jpg","images/ETIL_logo.png","images/ETIL_logo2.png","images/phone.png","components/card.js","components/footer.js","components/fullpage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CardExample","react_default","a","createElement","mdbreact_esm","className","style","backgroundImage","concat","this","props","image","backgroundRepeat","backgroundSize","marginTop","icon","city","tag","title","body","href","color","Component","FooterPage","fluid","md","fab","Date","getFullYear","FullPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTogglerClick","setState","collapsed","state","PostsListOne","_this2","axios","get","then","res","data","map","_ref","asyncToGenerator","regenerator_default","mark","_callee","img","place","wrap","_context","prev","next","category","categoryTheme","author","authorAvatar","require","name","description","date","serie","prevState","toConsumableArray","stop","_x","apply","arguments","overlay","id","backgroundColor","onClick","react_router_dom","light","expand","fixed","scrolling","maxWidth","src","alt","isOpen","navbar","left","anchor_link_default","offset","right","type","delay","react_mobile_store_button_default","store","url","linkProps","xl","post","idx","card","key","height","footer","React","App","fullpage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8QC2CzBC,mLA/BX,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAU,aACVC,MAAO,CACLC,gBAAe,QAAAC,OAAUC,KAAKC,MAAMC,MAArB,MACfC,iBAAkB,YAClBC,eAAgB,QACvBC,UAAW,SAGNb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gFACbJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACZJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASW,KAAK,mBADhB,IACqCN,KAAKC,MAAMM,MAEhDf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAca,IAAI,KAAKZ,UAAU,QAC/BJ,EAAAC,EAAAC,cAAA,cAASM,KAAKC,MAAMQ,QAEtBjB,EAAAC,EAAAC,cAAA,SAAIM,KAAKC,MAAMS,MACflB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgB,KAAK,uCAAuCC,MAAM,QACxDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASW,KAAK,eADhB,4BAtBYO,aC2CXC,EAlDI,WACjB,OACEtB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWiB,MAAM,iBAAiBhB,UAAU,wBAC1CJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcoB,OAAK,EAACnB,UAAU,4BAC5BJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQqB,GAAG,KACTxB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,cACEJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,aACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,eACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,mBAGNH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQqB,GAAG,KACTxB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,aACAJ,EAAAC,EAAAC,cAAA,KACEiB,KAAK,qEACLf,UAAU,cAEVJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASsB,KAAG,EAACX,KAAK,gBAGpBd,EAAAC,EAAAC,cAAA,KAAGiB,KAAK,KAAKf,UAAU,cACrBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASsB,KAAG,EAACX,KAAK,aAEpBd,EAAAC,EAAAC,cAAA,KACEiB,KAAK,qDACLf,UAAU,cAEVJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASsB,KAAG,EAACX,KAAK,iBAEpBd,EAAAC,EAAAC,cAAA,KAAGiB,KAAK,KAAKf,UAAU,eACrBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASsB,KAAG,EAACX,KAAK,eAEpBd,EAAAC,EAAAC,cAAA,KAAGiB,KAAK,KAAKf,UAAU,cACrBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASsB,KAAG,EAACX,KAAK,gBAK1Bd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qCACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcoB,OAAK,GAAnB,SACU,IAAIG,MAAOC,cADrB,cAC+C,IAC7C3B,EAAAC,EAAAC,cAAA,KAAGiB,KAAK,uBAAR,cCmLKS,cArMb,SAAAA,EAAYnB,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAAoB,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA1B,KAAMC,KA8BR0B,mBAAqB,WACnBN,EAAKO,SAAS,CACZC,WAAYR,EAAKS,MAAMD,aA9BzBR,EAAKS,MAAQ,CAEXC,aAAc,GACdF,WAAW,GANIR,mFASC,IAAAW,EAAAhC,KAClBiC,IAAMC,IAAN,oCAA8CC,KAAK,SAAAC,GACjDA,EAAIC,KAAKC,IAAT,eAAAC,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAhD,EAAAiD,KAAa,SAAAC,EAAMN,GAAN,IAAAO,EAAAC,EAAA,OAAAJ,EAAAhD,EAAAqD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACPL,EAAM,+BAAiCP,EAAKnC,MAC1C2C,EAAQ,CACZ/C,gBAAiB8C,EACjBM,SAAUb,EAAK9B,KACf4C,cAAe,OACfC,OAAQf,EAAKe,OACbC,aAAcC,EAAQ,IACtB7C,MAAO4B,EAAKkB,KACZ7C,KAAM2B,EAAKmB,YACXC,KAAMpB,EAAKoB,KACXC,MAAO,cAAgBrB,EAAKqB,OAE9B1B,EAAKJ,SAAS,SAAA+B,GAAS,MAAK,CAC1B5B,aAAY,CAAGc,GAAH9C,OAAAuB,OAAAsC,EAAA,EAAAtC,CAAaqC,EAAU5B,kBAd1B,wBAAAgB,EAAAc,SAAAlB,MAAb,gBAAAmB,GAAA,OAAAvB,EAAAwB,MAAA/D,KAAAgE,YAAA,uCA0BK,IACCjC,EAAiB/B,KAAK8B,MAAtBC,aACFkC,EACJzE,EAAAC,EAAAC,cAAA,OACEwE,GAAG,kBACHrE,MAAO,CAAEsE,gBAAiB,eAC1BC,QAASpE,KAAK2B,qBAMlB,OACEnC,EAAAC,EAAAC,cAAA,OAAKwE,GAAG,WACN1E,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,KACE7E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWiB,MAAM,QAAQ0D,OAAK,EAACC,OAAO,KAAKC,MAAM,MAAMC,WAAS,GAC9DjF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,OACEwE,GAAG,YACHtE,UAAU,gCACVC,MAAO,CAAE6E,SAAU,QACnBC,IAAKrB,EAAQ,IACbsB,IAAI,qBAGNpF,EAAAC,EAAAC,cAAA,QAAME,UAAU,2BACb,IACDJ,EAAAC,EAAAC,cAAA,OACEwE,GAAG,YACHtE,UAAU,gCACVC,MAAO,CAAE6E,SAAU,QACnBC,IAAKrB,EAAQ,IACbsB,IAAI,wBAKZpF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkByE,QAASpE,KAAK2B,qBAChCnC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAakF,OAAQ7E,KAAK8B,MAAMD,UAAWiD,QAAM,GAC/CtF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcoF,MAAI,GAChBvF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CAAYwF,OAAO,MAAMrF,UAAU,OAAOe,KAAK,SAA/C,SAIFnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CAAYwF,OAAO,KAAKrF,UAAU,OAAOe,KAAK,WAA9C,WAIFnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CAAYG,UAAU,OAAOe,KAAK,UAAlC,UAIFnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CAAYG,UAAU,OAAOe,KAAK,YAAlC,aAKJnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcuF,OAAK,GACjB1F,EAAAC,EAAAC,cAACC,EAAA,EAAD,UAKPK,KAAK8B,MAAMD,WAAaoC,IAI7BzE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,UAAU,MACjBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,UAAU,6DACjBJ,EAAAC,EAAAC,cAAA,WAASwE,GAAG,QACV1E,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqB,GAAG,IACHpB,UAAU,oDAEVJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcwF,KAAK,aAAaC,MAAM,MAAMvF,MAAO,CAAEQ,UAAW,SAC9Db,EAAAC,EAAAC,cAAA,MAAIE,UAAU,0CAAd,8BAGAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACdJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAd,gMAOAJ,EAAAC,EAAAC,cAAC2F,EAAA5F,EAAD,CACE6F,MAAM,MACNC,IAxFL,uCAyFKC,UAAW,CAAE/E,MAAO,sBAEtBjB,EAAAC,EAAAC,cAAC2F,EAAA5F,EAAD,CACE6F,MAAM,UACNC,IA5FD,qCA6FCC,UAAW,CAAE/E,MAAO,wBAK1BjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQqB,GAAG,IAAIyE,GAAG,IAAI7F,UAAU,WAC9BJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcwF,KAAK,cAAcC,MAAM,OACrC5F,EAAAC,EAAAC,cAAA,OACEiF,IAAKrB,EAAQ,IACbsB,IAAI,GACJhF,UAAU,qBAS1BJ,EAAAC,EAAAC,cAAA,WAASwE,GAAG,UACV1E,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,0CAAd,mBAGAJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,UAAU,QACfmC,EAAaO,IAAI,SAACoD,EAAMC,GAAP,OAChBnG,EAAAC,EAAAC,cAACkG,EAAD,CACErF,KAAMmF,EAAKxC,SACXhD,MAAOwF,EAAK5F,gBACZW,MAAOiF,EAAKjF,MACZC,KAAMgF,EAAKhF,KACXmF,IAAKF,SAMfnG,EAAAC,EAAAC,cAAA,WAASwE,GAAG,SACV1E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcE,MAlIF,CAAEiG,OAAQ,KAkIUlG,UAAU,uBACxCJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,0CAAd,YACAJ,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAd,kMAOJJ,EAAAC,EAAAC,cAAA,WAASwE,GAAG,WACV1E,EAAAC,EAAAC,cAACqG,EAAD,eA/LaC,IAAMnF,WClBdoF,MAJf,WACE,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,OCMWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjH,EAAAC,EAAAC,cAACgH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5E,KAAK,SAAA6E,GACjCA,EAAaC","file":"static/js/main.0d87162a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/0.984ceaec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ETIL_logo.4033499e.png\";","module.exports = __webpack_public_path__ + \"static/media/ETIL_logo2.4c3c8de2.png\";","module.exports = __webpack_public_path__ + \"static/media/phone.58fa9c55.png\";","import React, { Component } from \"react\";\nimport {\n  MDBCard,\n  MDBCardTitle,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBIcon\n} from \"mdbreact\";\n\nclass CardExample extends Component {\n  render() {\n    return (\n      <MDBCol>\n        <MDBCard\n          className=\"card-image\"\n          style={{\n            backgroundImage: `url(\"${this.props.image}\")`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n\t    marginTop: \"10px\"\n          }}\n        >\n          <div className=\"text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4\">\n            <div>\n              <h5 className=\"pink-text\">\n                <MDBIcon icon=\"map-marker-alt\" /> {this.props.city}\n              </h5>\n              <MDBCardTitle tag=\"h3\" className=\"pt-2\">\n                <strong>{this.props.title}</strong>\n              </MDBCardTitle>\n              <p>{this.props.body}</p>\n              <MDBBtn href=\"http://167.71.71.230:8081/index.html\" color=\"pink\">\n                <MDBIcon icon=\"clone left\" /> 360Â° View\n              </MDBBtn>\n            </div>\n          </div>\n        </MDBCard>\n      </MDBCol>\n    );\n  }\n}\n\nexport default CardExample;\n","import React from \"react\";\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter, MDBIcon } from \"mdbreact\";\n\nconst FooterPage = () => {\n  return (\n    <MDBFooter color=\"blue lighten-2\" className=\"font-small pt-4 mt-4\">\n      <MDBContainer fluid className=\"text-center text-md-left\">\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <h5 className=\"title\">Contact us</h5>\n              <MDBCol>\n                <MDBRow>tel:</MDBRow>\n                <MDBRow>email:</MDBRow>\n                <MDBRow>Adresse:</MDBRow>\n              </MDBCol>\n          </MDBCol>\n          <MDBCol md=\"6\">\n            <h5 className=\"title\">Follow us</h5>\n            <a\n              href=\"https://www.facebook.com/Essaouira-Innovation-Lab-318585465708348/\"\n              className=\"fb-ic mr-3\"\n            >\n              <MDBIcon fab icon=\"facebook-f\" />\n            </a>\n\n            <a href=\"#!\" className=\"tw-ic mr-3\">\n              <MDBIcon fab icon=\"twitter\" />\n            </a>\n            <a\n              href=\"https://www.linkedin.com/company/essaouira-innovat\"\n              className=\"li-ic mr-3\"\n            >\n              <MDBIcon fab icon=\"linkedin-in\" />\n            </a>\n            <a href=\"#!\" className=\"ins-ic mr-3\">\n              <MDBIcon fab icon=\"instagram\" />\n            </a>\n            <a href=\"#!\" className=\"yt-ic mr-3\">\n              <MDBIcon fab icon=\"youtube\" />\n            </a>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright:{\" \"}\n          <a href=\"https://www.1337.ma\"> 1337 </a>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n};\n\nexport default FooterPage;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MobileStoreButton from \"react-mobile-store-button\";\nimport axios from \"axios\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBMask,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBView,\n  MDBIcon,\n  MDBContainer,\n  MDBFormInline,\n  MDBAnimation\n} from \"mdbreact\";\nimport \"../index.css\";\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\nimport CardExample from \"./card\";\nimport FooterPage from \"./footer\";\n\nclass FullPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // First list of posts.\n      PostsListOne: [],\n      collapsed: false\n    };\n  }\n  componentDidMount() {\n    axios.get(`http://142.93.238.151/api/places`).then(res => {\n      res.data.map(async data => {\n        var img = \"http://142.93.238.151/public\" + data.image;\t      \n        const place = {\n          backgroundImage: img,\n          category: data.city,\n          categoryTheme: \"Dark\",\n          author: data.author,\n          authorAvatar: require(\"../images/avatars/0.jpg\"),\n          title: data.name,\n          body: data.description,\n          date: data.date,\n          serie: \"/EditPlace/\" + data.serie\n        };\n        this.setState(prevState => ({\n          PostsListOne: [place, ...prevState.PostsListOne]\n        }));\n      });\n    });\n  }\n\n  handleTogglerClick = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\n  render() {\n    const { PostsListOne } = this.state;\n    const overlay = (\n      <div\n        id=\"sidenav-overlay\"\n        style={{ backgroundColor: \"transparent\" }}\n        onClick={this.handleTogglerClick}\n      />\n    );\n    const iOSUrl = \"https://www.apple.com/ios/app-store/\";\n    const androidUrl = \"https://play.google.com/store/apps\";\n    const container = { height: 500 };\n    return (\n      <div id=\"apppage\">\n        <Router>\n          <div>\n            <MDBNavbar color=\"white\" light expand=\"md\" fixed=\"top\" scrolling>\n              <MDBContainer>\n                <MDBNavbarBrand>\n                  <div className=\"d-table m-auto\">\n                    <img\n                      id=\"main-logo\"\n                      className=\"d-inline-block align-top mr-1\"\n                      style={{ maxWidth: \"25px\" }}\n                      src={require(\"../images/ETIL_logo.png\")}\n                      alt=\"Shards Dashboard\"\n                    />\n\n                    <span className=\"d-none d-md-inline ml-1\">\n                      {\" \"}\n                      <img\n                        id=\"main-logo\"\n                        className=\"d-inline-block align-top mr-1\"\n                        style={{ maxWidth: \"80px\" }}\n                        src={require(\"../images/ETIL_logo2.png\")}\n                        alt=\"Shards Dashboard\"\n                      />\n                    </span>\n                  </div>\n                </MDBNavbarBrand>\n                <MDBNavbarToggler onClick={this.handleTogglerClick} />\n                <MDBCollapse isOpen={this.state.collapsed} navbar>\n                  <MDBNavbarNav left>\n                    <MDBNavItem>\n                      <AnchorLink offset=\"400\" className=\"link\" href=\"#home\">\n                        Home\n                      </AnchorLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                      <AnchorLink offset=\"60\" className=\"link\" href=\"#places\">\n                        Places\n                      </AnchorLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                      <AnchorLink className=\"link\" href=\"#about\">\n                        About\n                      </AnchorLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                      <AnchorLink className=\"link\" href=\"#contact\">\n                        Contact\n                      </AnchorLink>\n                    </MDBNavItem>\n                  </MDBNavbarNav>\n                  <MDBNavbarNav right>\n                    <MDBNavItem />\n                  </MDBNavbarNav>\n                </MDBCollapse>\n              </MDBContainer>\n            </MDBNavbar>\n            {this.state.collapsed && overlay}\n          </div>\n        </Router>\n\n        <MDBView className=\"bg\">\n          <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\n            <section id=\"home\">\n              <MDBContainer>\n                <MDBRow>\n                  <MDBCol\n                    md=\"6\"\n                    className=\"white-text text-center text-md-left mt-xl-5 mb-5\"\n                  >\n                    <MDBAnimation type=\"fadeInLeft\" delay=\".3s\" style={{ marginTop: \"50px\" }}>\n                      <h1 className=\"h1-responsive font-weight-bold mt-sm-5\">\n                        Let us show you the world!\n                      </h1>\n                      <hr className=\"hr-light\" />\n                      <h6 className=\"mb-4\">\n                        Lorem ipsum dolor sit amet, consectetur adipisicing\n                        elit. Rem repellendus quasi fuga nesciunt dolorum nulla\n                        magnam veniam sapiente, fugiat! Commodi sequi non animi\n                        ea dolor molestiae iste.\n                      </h6>\n\n                      <MobileStoreButton\n                        store=\"ios\"\n                        url={iOSUrl}\n                        linkProps={{ title: \"iOS Store Button\" }}\n                      />\n                      <MobileStoreButton\n                        store=\"android\"\n                        url={androidUrl}\n                        linkProps={{ title: \"iOS Store Button\" }}\n                      />\n                    </MDBAnimation>\n                  </MDBCol>\n\n                  <MDBCol md=\"6\" xl=\"5\" className=\"mt-xl-5\">\n                    <MDBAnimation type=\"fadeInRight\" delay=\".3s\">\n                      <img\n                        src={require(\"../images/phone.png\")}\n                        alt=\"\"\n                        className=\"img-fluid\"\n                      />\n                    </MDBAnimation>\n                  </MDBCol>\n                </MDBRow>\n              </MDBContainer>\n            </section>\n          </MDBMask>\n        </MDBView>\n        <section id=\"places\">\n          <MDBContainer>\n            <h1 className=\"h1-responsive font-weight-bold mt-sm-5\">\n              Places to visit\n            </h1>\n            <MDBRow className=\"py-5\">\n              {PostsListOne.map((post, idx) => (\n                <CardExample\n                  city={post.category}\n                  image={post.backgroundImage}\n                  title={post.title}\n                  body={post.body}\n                  key={idx}\n                />\n              ))}\n            </MDBRow>\n          </MDBContainer>\n        </section>\n        <section id=\"about\">\n          <MDBContainer style={container} className=\"text-left mt-5 pt-5\">\n            <h1 className=\"h1-responsive font-weight-bold mt-sm-5\">About us</h1>\n            <h5>Essaouira Innovation Lab</h5>\n            <br />\n            <h6 className=\"mb-4\">\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit. Rem\n              repellendus quasi fuga nesciunt dolorum nulla magnam veniam\n              sapiente, fugiat! Commodi sequi non animi ea dolor molestiae iste.\n            </h6>\n          </MDBContainer>\n        </section>\n        <section id=\"contact\">\n          <FooterPage />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default FullPage;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport FullPage from \"./components/fullpage\";\n\nfunction App() {\n  return <FullPage />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}